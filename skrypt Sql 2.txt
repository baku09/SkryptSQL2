-- Tworzenie tabeli audytowej dla książek
CREATE TABLE BOOKS_AUD (
                           AUDIT_ID INT AUTO_INCREMENT PRIMARY KEY,
                           EVENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                           EVENT_TYPE ENUM('INSERT', 'UPDATE', 'DELETE') NOT NULL,
                           BOOK_ID INT,
                           TITLE VARCHAR(255),
                           PUBYEAR INT,
                           OLD_TITLE VARCHAR(255),
                           OLD_PUBYEAR INT
);

-- Tworzenie tabeli audytowej dla czytelników
CREATE TABLE READERS_AUD (
                             AUDIT_ID INT AUTO_INCREMENT PRIMARY KEY,
                             EVENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                             EVENT_TYPE ENUM('INSERT', 'UPDATE', 'DELETE') NOT NULL,
                             READER_ID INT,
                             FIRSTNAME VARCHAR(255),
                             LASTNAME VARCHAR(255),
                             PESELID VARCHAR(11),
                             OLD_FIRSTNAME VARCHAR(255),
                             OLD_LASTNAME VARCHAR(255),
                             OLD_PESELID VARCHAR(11)
);

-- Wyzwalacz po wstawieniu rekordu do tabeli BOOKS
CREATE TRIGGER BOOKS_INSERT_AUD AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_TYPE, BOOK_ID, TITLE, PUBYEAR)
    VALUES ('INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR);
END;

-- Wyzwalacz po aktualizacji rekordu w tabeli BOOKS
CREATE TRIGGER BOOKS_UPDATE_AUD AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_TYPE, BOOK_ID, TITLE, PUBYEAR, OLD_TITLE, OLD_PUBYEAR)
    VALUES ('UPDATE', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, OLD.TITLE, OLD.PUBYEAR);
END;

-- Wyzwalacz po usunięciu rekordu z tabeli BOOKS
CREATE TRIGGER BOOKS_DELETE_AUD AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR)
    VALUES ('DELETE', OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR);
END;

-- Wyzwalacz po wstawieniu rekordu do tabeli READERS
CREATE TRIGGER READERS_INSERT_AUD AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_TYPE, READER_ID, FIRSTNAME, LASTNAME, PESELID)
    VALUES ('INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID);
END;

-- Wyzwalacz po aktualizacji rekordu w tabeli READERS
CREATE TRIGGER READERS_UPDATE_AUD AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_TYPE, READER_ID, FIRSTNAME, LASTNAME, PESELID, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID)
    VALUES ('UPDATE', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID);
END;

-- Wyzwalacz po usunięciu rekordu z tabeli READERS
CREATE TRIGGER READERS_DELETE_AUD AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_TYPE, READER_ID, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID)
    VALUES ('DELETE', OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID);
END;